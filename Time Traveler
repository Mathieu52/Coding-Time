String[][] Digital;
bool[][] Digital_Masked;
color[][] Digital_Color;
String[] C = {"€", "£", "¥", "§", "1", "2", "ξ", "L", "Q", "Ω", "φ"};
int Time = 0;
void setup() {
   size(screen.height, screen.width-70);
   Digital = new String[ceil(width/20)][ceil(height/20)];
   Digital_Masked = new bool[ceil(width/20)][ceil(height/20)];
   Digital_Color = new color[ceil(width/20)][ceil(height/20)];
   for (int o = 1; o < 2; o++) {
      for (int i = 0; i < 5; i++) {
         Digital_Masked[i][o] = true;
      }
   }
   for (int o = 0; o < Digital[0].length; o+=1) {
      for (int i = 0; i < Digital.length; i+=1) {
         Digital[i][o] = C[round(random(0, C.length-1))];
         int Random = round(random(0, 2));
         if (Random == 0) {
            Digital_Color[i][o] = color(242, 154, 14);
         }
         if (Random == 1) {
            Digital_Color[i][o] = color(124, 81, 0);
         }
         if (Random == 2) {
            Digital_Color[i][o] = color(232, 203, 132);
         }
      }
   }
   //frameRate(10);
}

void draw() {
   background(0);
   textSize(20);
   //C[round(random(0, C.length-1))]
   for (int o = 0; o < Digital[0].length; o++) {
      for (int i = 0; i < Digital.length; i++) {
         if (round(random(0, 20)) == 0) {
            Digital[i][o] = C[round(random(0, C.length-1))];
            int Random = round(random(0, 2));
            if (Random == 0) {
               Digital_Color[i][o] = color(242, 154, 14);
            }
            if (Random == 1) {
               Digital_Color[i][o] = color(124, 81, 0);
            }
            if (Random == 2) {
               Digital_Color[i][o] = color(232, 203, 132);
            }
         }
String Message = "TIME_TRAVELER_6804";
         for (int k = 0; k < Message.length; k++) {
Digital_Color[round(Digital.length/2)-round(Message.length/2)+k][round(Digital[0].length/2)] = color(252, 203, 55);
//252, 203, 55)
            Digital[round(Digital.length/2)-round(Message.length/2)+k][round(Digital[0].length/2)] = Message[k];
         }
         if (Digital_Masked[i][o] != true) {
            fill(Digital_Color[i][o]);
            text(Digital[i][o], i*20, o*20);
         }
      }
   }
   if (Time >= 1) {
      Time = 0;
   } else {
      Time+=0.4;
   }
   for (int o = 0; o < Digital[0].length; o++) {
      for (int i = Digital.length-1; i >= 0; i--) {
         if (Time >= 1) {
            if (Digital_Masked[i][o] == true) {
               Digital_Masked[i][o] = false;
               if (i < Digital.length-1) {
                  Digital_Masked[i+1][o] = true;
               } else {
                  Digital_Masked[0][o+1] = true;
               }
            }
         }
      }
   }
}
